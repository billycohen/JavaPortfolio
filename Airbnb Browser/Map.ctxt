#BlueJ class context
comment0.target=Map
comment0.text=\n\ The\ Map\ class\ represents\ a\ list\ of\ properties\ that\ are\ currently\ being\ displayed\ on\ the\ map,\ based\ on\ the\ users\ search\ parameters.\n\ \ This\ class\ is\ also\ responsible\ for\ calculating\ various\ statistics\ based\ on\ the\ listings\ stored\ within\ the\ map.\n\ \ \n\ @author\ Ziad\ Al-Dara,\ Alexander\ Bass,\ William\ Cohen,\ Mihnea-Andrei\ Radulescu,\ Bhanu\ Guntupalli\n\ @version\ 17.03.2018\n
comment1.params=lowerLimit\ upperLimit
comment1.target=Map(int,\ int)
comment1.text=\n\ Constructor\ for\ objects\ of\ class\ Map\n
comment10.params=
comment10.target=int\ getLowestPrice()
comment10.text=\n\ Returns\ the\ lowest\ priced\ listing\ currently\ shown\ on\ the\ map.\n
comment11.params=
comment11.target=int\ getTotalNumberOfReviews()
comment11.text=\n\ Returns\ the\ total\ amount\ of\ reviews\ across\ all\ of\ the\ listings\ on\ the\ map.\n\ \n\ MAY\ BE\ REDUNDANT,\ CAN\ ALWAYS\ REMOVE.\n
comment12.params=
comment12.target=int\ getTotalNumberOfListings()
comment12.text=\n\ Returns\ the\ total\ number\ of\ listings\ on\ the\ map.\n\ \n\ MAY\ BE\ REDUNANT,\ CAN\ ALWAYS\ REMOVE.\n
comment13.params=
comment13.target=java.util.ArrayList\ getValidListings()
comment2.params=
comment2.target=void\ populateProperties()
comment2.text=\n\ Places\ valid\ propeties\ on\ the\ map\ based\ on\ the\ lower\ and\ upper\ boundry\ parameters\ provided\ by\ the\ user.\n\ This\ method\ is\ also\ used\ to\ reset\ the\ map\ once\ the\ user\ has\ disabled\ any\ filters\ that\ they\ have\ enabled.\n
comment3.params=roomType
comment3.target=void\ filterListingsByRoomType(java.lang.String)
comment3.text=\n\ Filters\ the\ current\ list\ of\ valid\ properties,\ removing\ those\ that\ do\ not\ match\ the\ requested\ type.\n\ The\ type\ is\ selected\ with\ a\ series\ of\ check\ boxes.\n
comment4.params=neighbourhood
comment4.target=void\ filterListingsByNeighbourhood(java.lang.String)
comment4.text=\n\ Filters\ the\ current\ list\ of\ valid\ properties,\ removing\ those\ that\ do\ not\ match\ the\ requested\ neighbourhood.\n\ The\ neighborhood\ is\ selected\ with\ a\ drop-down\ box\ within\ the\ GUI.\n
comment5.params=stay
comment5.target=void\ filterListingsByStay(int)
comment5.text=\n\ Filters\ the\ current\ list\ of\ valid\ properties,\ removing\ those\ that\ do\ not\ match\ the\ requested\ stay\ duration.\n\ The\ length\ of\ time\ that\ the\ user\ would\ like\ to\ stay\ is\ selected\ with\ a\ text\ box\ within\ the\ GUI\n
comment6.params=ID
comment6.target=void\ filterListingsByHost(int)
comment6.text=\n\ Filters\ the\ current\ list\ of\ valid\ properties,\ removing\ those\ that\ do\ not\ match\ the\ requested\ Host\ ID.\n\ The\ Host\ ID\ that\ the\ user\ would\ like\ to\ view\ properties\ of\ is\ selected\ with\ a\ text\ box\ within\ the\ GUI.\n
comment7.params=
comment7.target=int\ getAveragePrice()
comment7.text=\n\ Returns\ the\ average\ price\ of\ all\ the\ listings\ that\ are\ currently\ shown\ on\ the\ map.\n
comment8.params=neighbourhood
comment8.target=int\ getAverageLocalPrice(java.lang.String)
comment8.text=\n\ Returns\ the\ average\ price\ within\ a\ specific\ neighbourhood.\n\ \n\ LOCAL\ STATISTICS\ CAN\ BE\ HANDLED\ IN\ A\ SEPERATE\ CLASS\ -\ BOROUGH?\ UP\ FOR\ DISCUSSION.\n
comment9.params=
comment9.target=int\ getHighestPrice()
comment9.text=\n\ Returns\ the\ highest\ priced\ listing\ currently\ shown\ on\ the\ map.\n
numComments=14
