#BlueJ class context
comment0.target=Game
comment0.text=\n\ \ This\ class\ is\ the\ main\ class\ of\ the\ "Prison\ Escape"\ application,\ which\n\ \ is\ based\ on\ the\ original\ "zuul-better"\ application\ which\ was\ created\ by\n\ \ Michael\ K\u00F6lling\ and\ David\ J.\ Barnes.\n\ \n\ \ This\ application\ is\ a\ game\ in\ which\ player(s)\ must\ escape\ from\ a\ prison\n\ \ by\ navigating\ through\ rooms,\ using\ items,\ completing\ quests,\ and\n\ \ engaging\ in\ combat\ with\ various\ enemies.\n\ \ \n\ \ This\ purpose\ of\ this\ class\ is\ to\ set\ up\ the\ game\ environment,\ which\n\ \ includes\ rooms,\ items,\ objects\ and\ NPCs\ that\ the\ player\ interacts\ with.\n\ \ \n\ \ This\ class\ also\ processes\ various\ commands\ which\ the\ player\ types\ into\n\ \ the\ console\ and\ links\ all\ of\ the\ other\ classes\ together.\n\ \n\ \ @Author\:\ William\ Cohen\n\ \ @Version\:\ 1.0\n
comment1.params=player1\ player2
comment1.target=Game(java.lang.String,\ java.lang.String)
comment1.text=\n\ Create\ the\ game.\n\ Initialize\ the\ map\ by\ creating\ rooms\ and\ exit\ points.\n\ Create\ items\ and\ place\ them\ in\ rooms\ and\ on\ NPC's\n\ Create\ NPC's\ and\ place\ them\ in\ specific\ rooms.\n
comment10.params=
comment10.target=void\ play()
comment10.text=\n\ \ Main\ play\ routine.\ \ Loops\ until\ end\ of\ play.\n
comment11.params=
comment11.target=java.lang.String\ playerTag()
comment12.params=
comment12.target=void\ npcMovement()
comment12.text=\n\ Controls\ movement\ of\ the\ warden\ npc\n
comment13.params=
comment13.target=void\ printWelcome()
comment13.text=\n\ Print\ out\ the\ opening\ message\ for\ the\ player.\n
comment14.params=command
comment14.target=boolean\ processCommand(Command)
comment14.text=\n\ Given\ a\ command,\ process\ (that\ is\:\ execute)\ the\ command.\n\ @param\ command\ The\ command\ to\ be\ processed.\n\ @return\ true\ If\ the\ command\ ends\ the\ game,\ false\ otherwise.\n
comment15.params=
comment15.target=void\ printHelp()
comment15.text=\n\ Print\ out\ some\ help\ information.\n\ Here\ we\ print\ some\ stupid,\ cryptic\ message\ and\ a\ list\ of\ the\ \n\ command\ words.\n
comment16.params=
comment16.target=Player\ switchPlayer()
comment16.text=\n\ This\ method\ switches\ the\ current\ player.\n
comment17.params=command
comment17.target=void\ talk(Command)
comment17.text=\n\ This\ method\ handles\ player\ interaction\ with\ NPC's\n
comment18.params=command
comment18.target=void\ attack(Command)
comment18.text=\n\ Method\ which\ handles\ the\ attack\ command,\ allowing\ players\ to\ engage\n\ in\ combat\ with\ NPCs\ that\ are\ located\ in\ their\ current\ room.\n
comment19.params=command
comment19.target=void\ useItem(Command)
comment19.text=\n\ Allows\ players\ to\ use\ items\ such\ as\ health\ potions\ to\ recover\ stats\n\ such\ as\ hitpoints.\n
comment2.params=player1\ player2
comment2.target=void\ createPlayer(java.lang.String,\ java.lang.String)
comment2.text=\n\ Creates\ the\ players\ which\ are\ controlled\ by\ the\ users\ as\ a\ Player\ object\n\ Assigns\ various\ fields\ to\ each\ player\ such\ as\ hitpoints,\ damage\ and\n\ starting\ room.\n
comment20.params=command
comment20.target=void\ give(Command)
comment20.text=\n\ This\ method\ allows\ the\ player\ to\ give\ items\ to\ NPCs,\ objects\n\ and\ other\ players.\ This\ is\ used\ in\ quests\ and\ allows\ trading\ between\n\ players.\n
comment21.params=command\ currentPlayer
comment21.target=void\ goRoom(Command,\ Player)
comment21.text=\ \n\ Try\ to\ in\ to\ one\ direction.\ If\ there\ is\ an\ exit,\ enter\ the\ new\n\ room,\ otherwise\ print\ an\ error\ message.\n
comment22.params=command\ currentPlayer
comment22.target=void\ goBack(Command,\ Player)
comment22.text=\n\ This\ method\ handles\ the\ back\ command\ which\ the\ player\ can\ use\ to\ \n\ quickly\ go\ back\ to\ the\ room\ they\ were\ previously\ in.\n
comment23.params=
comment23.target=void\ goRandom()
comment23.text=\n\ This\ method\ is\ used\ to\ randomly\ select\ a\ room\ and\ send\ the\ player\ to\n\ that\ room.\ This\ is\ utilized\ by\ the\ teleporter\ room.\n
comment24.params=command
comment24.target=void\ search(Command)
comment24.text=\n\ This\ method\ handles\ the\ search\ command\ which\ the\ player\ can\ use\ to\n\ search\ through\ objects\ that\ are\ currently\ in\ their\ room\ and\ display\n\ the\ items\ that\ are\ in\ that\ object.\n
comment25.params=command
comment25.target=void\ getItem(Command)
comment25.text=\n\ This\ method\ handles\ the\ get\ command\ which\ can\ be\ used\ by\ the\ player\ to\n\ get\ items\ from\ the\ room\ or\ items\ within\ objects\ in\ the\ room\ they\ are\n\ currently\ in.\n
comment26.params=command
comment26.target=void\ equipItem(Command)
comment26.text=\n\ This\ method\ handles\ the\ equip\ command\ which\ can\ be\ used\ by\ players\ to\n\ equip\ certain\ items\ in\ certain\ equipment\ slots\ to\ upgrade\ their\ stats.\n
comment27.params=command
comment27.target=void\ removeItem(Command)
comment27.text=\n\ This\ method\ handles\ the\ remove\ command,\ which\ is\ used\ by\ the\ player\n\ to\ remove\ items\ that\ they\ have\ equipped.\n
comment28.params=command
comment28.target=void\ dropItem(Command)
comment28.text=\n\ This\ method\ handles\ the\ drop\ command\ which\ is\ used\ to\ remove\ items\ from\n\ the\ players\ inventory,\ and\ puts\ the\ item\ on\ the\ floor\ of\ the\ room\ they\n\ are\ currently\ in.\n
comment29.params=command
comment29.target=boolean\ quit(Command)
comment29.text=\ \n\ "Quit"\ was\ entered.\ Check\ the\ rest\ of\ the\ command\ to\ see\n\ whether\ we\ really\ quit\ the\ game.\n\ @return\ true,\ if\ this\ command\ quits\ the\ game,\ false\ otherwise.\n
comment3.params=
comment3.target=void\ playerReset()
comment3.text=\n\ Sends\ player\ back\ to\ starting\ location\ and\ resets\ their\ stats.\n
comment4.params=
comment4.target=void\ createRoom()
comment4.text=\n\ \ Create\ rooms\ which\ make\ up\ the\ game.\n\ \ All\ rooms\ are\ created\ with\ a\ description.\n\ \ Some\ rooms\ are\ added\ to\ an\ ArrayList\ rooms\ which\ is\ used\ when\ moving\n\ \ the\ player\ to\ a\ random\ room.\n
comment5.params=room\ direction\ destination
comment5.target=void\ createExit(Room,\ java.lang.String,\ Room)
comment5.text=\n\ \ This\ method\ is\ used\ to\ dynamically\ add\ exit\ points\ to\ rooms.\n
comment6.params=
comment6.target=void\ createItem()
comment6.text=\n\ \ Create\ items\ which\ are\ placed\ around\ the\ game.\n\ \ Items\ can\ be\ placed\ in\ rooms\ on\ in\ NPC\ inventories.\n\ \ All\ items\ are\ created\ with\ a\ description\ and\ weight.\n\ \ Items\ are\ also\ assigned\ a\ type,\ which\ determines\ what\ they\ are\ used\ for.\n
comment7.params=
comment7.target=void\ createNPC()
comment7.text=\n\ \ Create\ NPC's\ which\ are\ placed\ around\ the\ game.\n\ \ All\ NPC's\ are\ created\ with\ a\ name\ and\ hitpoints.\n\ \ NPC's\ also\ carry\ items.\n\ \ NPC's\ can\ also\ be\ configured\ to\ be\ hostile\ or\ passive.\ true\ indicates\ hostile.\n\ \ NPC's\ are\ also\ placed\ in\ rooms\ at\ the\ start\ of\ the\ game.\n
comment8.params=
comment8.target=void\ createObject()
comment8.text=\n\ \ Create\ objects\ which\ are\ placed\ in\ rooms.\n\ \ objects\ can\ contain\ items\ and\ be\ searched\ through\ by\ the\ player.\n
comment9.params=
comment9.target=void\ initialise()
comment9.text=\n\ \ places\ items\ around\ the\ game\n\ \ places\ NPCs\ around\ the\ game\n\ \ places\ objects\ around\ the\ game\n\ \ gives\ NPCs\ and\ objects\ items\n
numComments=30
